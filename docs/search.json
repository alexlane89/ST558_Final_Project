[
  {
    "objectID": "EDA.html",
    "href": "EDA.html",
    "title": "EDA Quarto File",
    "section": "",
    "text": "This is the initial Exploratory Data Analysis file which will examine the Diabetes Health Indicators data set.\n\n\n\n\nThe Behavioral Risk Factor Surveillance System (BRFSS) conducts yearly phone surveys in the United States. The surveys include questions for Americans about their health status and care choices. Our data set is a subset of the BRFSS survey calls from 2015 which focus on diabetes-related survey responses.\n\n\n\n\n\n\n\n\n\n\n\n\n\nDiabetes_binary\nHighBP\nHighChol\nCholCheck\nBMI\nSmoker\nStroke\n\n\n\n\nClass\nClass\nClass\nClass\nNum\nClass\nClass\n\n\n0\n0\n0\n0\n\n0\n0\n\n\n1\n1\n1\n1\n\n1\n1\n\n\n\n\nDiabetes Survey Response variables - columns and their type.\n\n\nHeartDiseaseorAngina\nPhysActivty\nFruits\n\n\n\n\nClass\nClass\nClass\n\n\n0\n0\n0\n\n\n1\n1\n1\n\n\n\n\n\n\nStart by activiting the necessary packages\n\n\nlibrary(tidyverse)\nlibrary(ggplot2)\n\n\nInsert comments on which predictors\n\n\ndiabetes &lt;- read_csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\")\n\nRows: 253680 Columns: 22\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (22): Diabetes_binary, HighBP, HighChol, CholCheck, BMI, Smoker, Stroke,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nspec(diabetes)\n\ncols(\n  Diabetes_binary = col_double(),\n  HighBP = col_double(),\n  HighChol = col_double(),\n  CholCheck = col_double(),\n  BMI = col_double(),\n  Smoker = col_double(),\n  Stroke = col_double(),\n  HeartDiseaseorAttack = col_double(),\n  PhysActivity = col_double(),\n  Fruits = col_double(),\n  Veggies = col_double(),\n  HvyAlcoholConsump = col_double(),\n  AnyHealthcare = col_double(),\n  NoDocbcCost = col_double(),\n  GenHlth = col_double(),\n  MentHlth = col_double(),\n  PhysHlth = col_double(),\n  DiffWalk = col_double(),\n  Sex = col_double(),\n  Age = col_double(),\n  Education = col_double(),\n  Income = col_double()\n)\n\n\n\n\n\nThe output above lists all the variables/columns associated with the BRFSS binary indicators dataset from 2015. See below for an explanation of the variables in question:\n\nDiabetes_binary: An assessment of diabetes status of the individual respondent with 3 levels:\n\n\n\n0\n1\n2\n\n\n\n\nNo Diabetes\nPre-Diabetes\nDiabetes\n\n\n\n\nClean up data - identify NA’ed rows. I would like to identify if there are any columns with NA values.\n\n\nNA_vec &lt;- c(seq_along(diabetes))\nnames(NA_vec) &lt;- names(diabetes)\n\nfor (i in seq_along(diabetes)) {\n  NA_vec[i] &lt;- sum(is.na(diabetes[i]))\n}\n\nNA_vec\n\n     Diabetes_binary               HighBP             HighChol \n                   0                    0                    0 \n           CholCheck                  BMI               Smoker \n                   0                    0                    0 \n              Stroke HeartDiseaseorAttack         PhysActivity \n                   0                    0                    0 \n              Fruits              Veggies    HvyAlcoholConsump \n                   0                    0                    0 \n       AnyHealthcare          NoDocbcCost              GenHlth \n                   0                    0                    0 \n            MentHlth             PhysHlth             DiffWalk \n                   0                    0                    0 \n                 Sex                  Age            Education \n                   0                    0                    0 \n              Income \n                   0 \n\n\n\nThere are no NAs in any of the columns, so no omitting of rows for that particular reason is required.\n\n\nOne unique challenge or assessment of this data set is that all variables except for BMI are binary and/or classes. They are all double/numeric type columns with integers denoting a factored response to an associated question, whether it be a binary Yes/No, or a grouped category like education level (with levels 1-6) With that said, we can get som summary statistics and distribution information around the only continuous variable: BMI.\n\n\nb &lt;- ggplot(data = diabetes, aes(x=BMI))\nb + geom_histogram(binwidth = 5) +\n  labs(title = \"BMI Histogram\")\n\n\n\n\n\n\n\n\n\nSummary Statistics for BMI:\n\n\nsummary(diabetes$BMI)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  12.00   24.00   27.00   28.38   31.00   98.00 \n\n\n\nThe maximum identification of 98 is helpful for this exercise, because it’s difficult to see the outlier values from the histogram.\n\n\n\n\n\n\nTo support the model development, I will convert the target variable: Diabetes_binary to a factor column with status of “No”, “Pre”, “Diabetes”\n\n\ndiab2 &lt;- diabetes |&gt;\n  mutate(DiabetesStatus = \n           ifelse(Diabetes_binary == 0, \"No\",\n                  ifelse(Diabetes_binary == 1, \"Yes\",\n                         \"ERROR\"))) |&gt;\n  select(!Diabetes_binary)\ndiab2$DiabetesStatus &lt;- as.factor(diab2$DiabetesStatus)\n\n(diab2)\n\n# A tibble: 253,680 × 22\n   HighBP HighChol CholCheck   BMI Smoker Stroke HeartDiseaseorAttack\n    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;                &lt;dbl&gt;\n 1      1        1         1    40      1      0                    0\n 2      0        0         0    25      1      0                    0\n 3      1        1         1    28      0      0                    0\n 4      1        0         1    27      0      0                    0\n 5      1        1         1    24      0      0                    0\n 6      1        1         1    25      1      0                    0\n 7      1        0         1    30      1      0                    0\n 8      1        1         1    25      1      0                    0\n 9      1        1         1    30      1      0                    1\n10      0        0         1    24      0      0                    0\n# ℹ 253,670 more rows\n# ℹ 15 more variables: PhysActivity &lt;dbl&gt;, Fruits &lt;dbl&gt;, Veggies &lt;dbl&gt;,\n#   HvyAlcoholConsump &lt;dbl&gt;, AnyHealthcare &lt;dbl&gt;, NoDocbcCost &lt;dbl&gt;,\n#   GenHlth &lt;dbl&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;, DiffWalk &lt;dbl&gt;, Sex &lt;dbl&gt;,\n#   Age &lt;dbl&gt;, Education &lt;dbl&gt;, Income &lt;dbl&gt;, DiabetesStatus &lt;fct&gt;\n\n\n\nViewing combination of variables\n\n\npairs(~ Age + Education + Income, data = diab2)\n\n\n\n\n\n\n\n\n\nMore plots\n\n\ndistSum &lt;- diabetes |&gt;\n  group_by(Age) |&gt;\n  summarize(propDiabetes = mean(Diabetes_binary),\n            n = n()) |&gt;\n  ungroup()\nggplot(distSum, aes(x=Age, y=propDiabetes)) +\n  geom_point(stat = \"identity\", aes(size = n))\n\n\n\n\n\n\n\n\n\nInc_Prop &lt;- diabetes |&gt;\n  group_by(Income) |&gt;\n  summarize(propDiabetes = mean(Diabetes_binary),\n            n = n()) |&gt;\n  ungroup()\nggplot(Inc_Prop, aes(x=Income, y=propDiabetes)) +\n  geom_point(stat = \"identity\", aes(size = n))\n\n\n\n\n\n\n\n\n\nInc_Prop &lt;- diabetes |&gt;\n  group_by(Education) |&gt;\n  summarize(propDiabetes = mean(Diabetes_binary),\n            n = n()) |&gt;\n  ungroup()\nggplot(Inc_Prop, aes(x=Education, y=propDiabetes)) +\n  geom_point(stat = \"identity\", aes(size = n))\n\n\n\n\n\n\n\n\n\nBMI_Prop &lt;- diabetes |&gt;\n  group_by(BMI) |&gt;\n  summarize(propDiabetes = mean(Diabetes_binary),\n            n = n()) |&gt;\n  ungroup()\nggplot(BMI_Prop, aes(x=BMI, y=propDiabetes)) +\n  geom_point(stat = \"identity\", aes(size = n))\n\n\n\n\n\n\n\n\n\n\n\nClick here for the Modeling Page"
  },
  {
    "objectID": "Modeling.html",
    "href": "Modeling.html",
    "title": "Modeling Quarto File",
    "section": "",
    "text": "Modeling Quarto File\n\nThis is the Modeling file which will be used to construct and evaluate different model fits for predictive modeling of Diabetes Health Indicators.\n\n\nLink to EDA Site:\nClick here for the Modeling Page"
  },
  {
    "objectID": "EDA.html#introduction-to-data",
    "href": "EDA.html#introduction-to-data",
    "title": "EDA Quarto File",
    "section": "",
    "text": "The Behavioral Risk Factor Surveillance System (BRFSS) conducts yearly phone surveys in the United States. The surveys include questions for Americans about their health status and care choices. Our data set is a subset of the BRFSS survey calls from 2015 which focus on diabetes-related survey responses.\n\n\n\n\n\n\n\n\n\n\n\n\n\nDiabetes_binary\nHighBP\nHighChol\nCholCheck\nBMI\nSmoker\nStroke\n\n\n\n\nClass\nClass\nClass\nClass\nNum\nClass\nClass\n\n\n0\n0\n0\n0\n\n0\n0\n\n\n1\n1\n1\n1\n\n1\n1\n\n\n\n\nDiabetes Survey Response variables - columns and their type.\n\n\nHeartDiseaseorAngina\nPhysActivty\nFruits\n\n\n\n\nClass\nClass\nClass\n\n\n0\n0\n0\n\n\n1\n1\n1\n\n\n\n\n\n\nStart by activiting the necessary packages\n\n\nlibrary(tidyverse)\nlibrary(ggplot2)\n\n\nInsert comments on which predictors\n\n\ndiabetes &lt;- read_csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\")\n\nRows: 253680 Columns: 22\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (22): Diabetes_binary, HighBP, HighChol, CholCheck, BMI, Smoker, Stroke,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nspec(diabetes)\n\ncols(\n  Diabetes_binary = col_double(),\n  HighBP = col_double(),\n  HighChol = col_double(),\n  CholCheck = col_double(),\n  BMI = col_double(),\n  Smoker = col_double(),\n  Stroke = col_double(),\n  HeartDiseaseorAttack = col_double(),\n  PhysActivity = col_double(),\n  Fruits = col_double(),\n  Veggies = col_double(),\n  HvyAlcoholConsump = col_double(),\n  AnyHealthcare = col_double(),\n  NoDocbcCost = col_double(),\n  GenHlth = col_double(),\n  MentHlth = col_double(),\n  PhysHlth = col_double(),\n  DiffWalk = col_double(),\n  Sex = col_double(),\n  Age = col_double(),\n  Education = col_double(),\n  Income = col_double()\n)\n\n\n\n\n\nThe output above lists all the variables/columns associated with the BRFSS binary indicators dataset from 2015. See below for an explanation of the variables in question:\n\nDiabetes_binary: An assessment of diabetes status of the individual respondent with 3 levels:\n\n\n\n0\n1\n2\n\n\n\n\nNo Diabetes\nPre-Diabetes\nDiabetes\n\n\n\n\nClean up data - identify NA’ed rows. I would like to identify if there are any columns with NA values.\n\n\nNA_vec &lt;- c(seq_along(diabetes))\nnames(NA_vec) &lt;- names(diabetes)\n\nfor (i in seq_along(diabetes)) {\n  NA_vec[i] &lt;- sum(is.na(diabetes[i]))\n}\n\nNA_vec\n\n     Diabetes_binary               HighBP             HighChol \n                   0                    0                    0 \n           CholCheck                  BMI               Smoker \n                   0                    0                    0 \n              Stroke HeartDiseaseorAttack         PhysActivity \n                   0                    0                    0 \n              Fruits              Veggies    HvyAlcoholConsump \n                   0                    0                    0 \n       AnyHealthcare          NoDocbcCost              GenHlth \n                   0                    0                    0 \n            MentHlth             PhysHlth             DiffWalk \n                   0                    0                    0 \n                 Sex                  Age            Education \n                   0                    0                    0 \n              Income \n                   0 \n\n\n\nThere are no NAs in any of the columns, so no omitting of rows for that particular reason is required.\n\n\nOne unique challenge or assessment of this data set is that all variables except for BMI are binary and/or classes. They are all double/numeric type columns with integers denoting a factored response to an associated question, whether it be a binary Yes/No, or a grouped category like education level (with levels 1-6) With that said, we can get som summary statistics and distribution information around the only continuous variable: BMI.\n\n\nb &lt;- ggplot(data = diabetes, aes(x=BMI))\nb + geom_histogram(binwidth = 5) +\n  labs(title = \"BMI Histogram\")\n\n\n\n\n\n\n\n\n\nSummary Statistics for BMI:\n\n\nsummary(diabetes$BMI)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  12.00   24.00   27.00   28.38   31.00   98.00 \n\n\n\nThe maximum identification of 98 is helpful for this exercise, because it’s difficult to see the outlier values from the histogram.\n\n\n\n\n\n\nTo support the model development, I will convert the target variable: Diabetes_binary to a factor column with status of “No”, “Pre”, “Diabetes”\n\n\ndiab2 &lt;- diabetes |&gt;\n  mutate(DiabetesStatus = \n           ifelse(Diabetes_binary == 0, \"No\",\n                  ifelse(Diabetes_binary == 1, \"Yes\",\n                         \"ERROR\"))) |&gt;\n  select(!Diabetes_binary)\ndiab2$DiabetesStatus &lt;- as.factor(diab2$DiabetesStatus)\n\n(diab2)\n\n# A tibble: 253,680 × 22\n   HighBP HighChol CholCheck   BMI Smoker Stroke HeartDiseaseorAttack\n    &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;                &lt;dbl&gt;\n 1      1        1         1    40      1      0                    0\n 2      0        0         0    25      1      0                    0\n 3      1        1         1    28      0      0                    0\n 4      1        0         1    27      0      0                    0\n 5      1        1         1    24      0      0                    0\n 6      1        1         1    25      1      0                    0\n 7      1        0         1    30      1      0                    0\n 8      1        1         1    25      1      0                    0\n 9      1        1         1    30      1      0                    1\n10      0        0         1    24      0      0                    0\n# ℹ 253,670 more rows\n# ℹ 15 more variables: PhysActivity &lt;dbl&gt;, Fruits &lt;dbl&gt;, Veggies &lt;dbl&gt;,\n#   HvyAlcoholConsump &lt;dbl&gt;, AnyHealthcare &lt;dbl&gt;, NoDocbcCost &lt;dbl&gt;,\n#   GenHlth &lt;dbl&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;, DiffWalk &lt;dbl&gt;, Sex &lt;dbl&gt;,\n#   Age &lt;dbl&gt;, Education &lt;dbl&gt;, Income &lt;dbl&gt;, DiabetesStatus &lt;fct&gt;\n\n\n\nViewing combination of variables\n\n\npairs(~ Age + Education + Income, data = diab2)\n\n\n\n\n\n\n\n\n\nMore plots\n\n\ndistSum &lt;- diabetes |&gt;\n  group_by(Age) |&gt;\n  summarize(propDiabetes = mean(Diabetes_binary),\n            n = n()) |&gt;\n  ungroup()\nggplot(distSum, aes(x=Age, y=propDiabetes)) +\n  geom_point(stat = \"identity\", aes(size = n))\n\n\n\n\n\n\n\n\n\nInc_Prop &lt;- diabetes |&gt;\n  group_by(Income) |&gt;\n  summarize(propDiabetes = mean(Diabetes_binary),\n            n = n()) |&gt;\n  ungroup()\nggplot(Inc_Prop, aes(x=Income, y=propDiabetes)) +\n  geom_point(stat = \"identity\", aes(size = n))\n\n\n\n\n\n\n\n\n\nInc_Prop &lt;- diabetes |&gt;\n  group_by(Education) |&gt;\n  summarize(propDiabetes = mean(Diabetes_binary),\n            n = n()) |&gt;\n  ungroup()\nggplot(Inc_Prop, aes(x=Education, y=propDiabetes)) +\n  geom_point(stat = \"identity\", aes(size = n))\n\n\n\n\n\n\n\n\n\nBMI_Prop &lt;- diabetes |&gt;\n  group_by(BMI) |&gt;\n  summarize(propDiabetes = mean(Diabetes_binary),\n            n = n()) |&gt;\n  ungroup()\nggplot(BMI_Prop, aes(x=BMI, y=propDiabetes)) +\n  geom_point(stat = \"identity\", aes(size = n))\n\n\n\n\n\n\n\n\n\n\n\nClick here for the Modeling Page"
  }
]