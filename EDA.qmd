# EDA Quarto File

> This is the initial Exploratory Data Analysis file which will examine the Diabetes Health Indicators data set.

## Introduction to Data
> The Behavioral Risk Factor Surveillance System (BRFSS) conducts yearly phone surveys in the United States. The surveys include questions for Americans about their health status and care choices. Our data set is a subset of the BRFSS survey calls from 2015 which focus on diabetes-related survey responses.

| Diabetes_binary | HighBP | HighChol | CholCheck | BMI | Smoker | Stroke |
|-----------------|:-------|---------:|:----------|----:|:-------|-------:|
|      Class      | Class  |   Class  |   Class   | Num | Class  |  Class |
|        0        |   0    |     0    |     0     |     |   0    |    0   |
|        1        |   1    |     1    |     1     |     |   1    |    1   |

| HeartDiseaseorAngina | PhysActivty | Fruits |
|----------------------|:------------|-------:|
|         Class        |    Class    | Class  |
|           0          |      0      |   0    |
|           1          |      1      |   1    |

: Diabetes Survey Response variables - columns and their type.

### Exploratory Discussion

> Start by activiting the necessary packages

```{r, warning=FALSE, message=FALSE}
library(tidyverse)
library(ggplot2)
```


> Insert comments on which predictors 

```{r}
diabetes <- read_csv("diabetes_binary_health_indicators_BRFSS2015.csv")

spec(diabetes)
```

#### Variable Descriptions

> The output above lists all the variables/columns associated with the BRFSS binary indicators dataset from 2015. See below for an explanation of the variables in question:

**Diabetes_binary**: An assessment of diabetes status of the individual respondent with 3 levels:

|         0       |      1       |     2    |
|:---------------:|:------------:|:--------:|
|   No Diabetes   | Pre-Diabetes | Diabetes |

> Clean up data - identify NA'ed rows. I would like to identify if there are any columns with NA values.

```{r}
NA_vec <- c(seq_along(diabetes))
names(NA_vec) <- names(diabetes)

for (i in seq_along(diabetes)) {
  NA_vec[i] <- sum(is.na(diabetes[i]))
}

NA_vec
```
> There are no NAs in any of the columns, so no omitting of rows for that particular reason is required.

> One unique challenge or assessment of this data set is that all variables except for BMI are binary and/or classes. They are all double/numeric type columns with integers denoting a factored response to an associated question, whether it be a binary Yes/No, or a grouped category like education level (with levels 1-6)
> With that said, we can get som summary statistics and distribution information around the only continuous variable: BMI.

```{r}
b <- ggplot(data = diabetes, aes(x=BMI))
b + geom_histogram(binwidth = 5) +
  labs(title = "BMI Histogram")
```

> Summary Statistics for BMI:

```{r}
summary(diabetes$BMI)
```

> The maximum identification of 98 is helpful for this exercise, because it's difficult to see the outlier values from the histogram.

### Data Manipulation

> To support the model development, I will convert the target variable: Diabetes_binary to a factor column with status of "No", "Pre", "Diabetes"

```{r}
diab2 <- diabetes |>
  mutate(DiabetesStatus = 
           ifelse(Diabetes_binary == 0, "No",
                  ifelse(Diabetes_binary == 1, "Yes",
                         "ERROR")))
diab2$DiabetesStatus <- as.factor(diab2$DiabetesStatus)

(diab2)
```


> Viewing combination of variables

```{r}
pairs(~ Age + Education + Income, data = diab2)
```

> More plots

```{r}
distSum <- diab2 |>
  group_by(Age) |>
  summarize(propDiabetes = mean(Diabetes_binary),
            n = n()) |>
  ungroup()
ggplot(distSum, aes(x=Age, y=propDiabetes)) +
  geom_point(stat = "identity", aes(size = n))
```

```{r}
Inc_Prop <- diab2 |>
  group_by(Income) |>
  summarize(propDiabetes = mean(Diabetes_binary),
            n = n()) |>
  ungroup()
ggplot(Inc_Prop, aes(x=Income, y=propDiabetes)) +
  geom_point(stat = "identity", aes(size = n))
```

```{r}
Inc_Prop <- diab2 |>
  group_by(Education) |>
  summarize(propDiabetes = mean(Diabetes_binary),
            n = n()) |>
  ungroup()
ggplot(Inc_Prop, aes(x=Education, y=propDiabetes)) +
  geom_point(stat = "identity", aes(size = n))
```

```{r}
BMI_Prop <- diab2 |>
  group_by(BMI) |>
  summarize(propDiabetes = mean(Diabetes_binary),
            n = n()) |>
  ungroup()
ggplot(BMI_Prop, aes(x=BMI, y=propDiabetes)) +
  geom_point(stat = "identity", aes(size = n))
```


```{r}
saveRDS(diab2, file = "diab2.rds")
```


### Link to Modeling Site:

[Click here for the Modeling Page](Modeling.html)